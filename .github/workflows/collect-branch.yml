name: RHEL-RPM-Collection
run-name: ${{ github.actor }} is Collecting Images ðŸš€
on:
  push:
    branches-ignore:
      - main
  release:
    types: [edited, released]
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

      - name: Get disk space
        id: DISK  
        run: |
          df -h
          echo -e "\nDisk List"
          sudo fdisk -l | grep -i disk

  Collect-RPMs-RHEL8:
    needs: [Date]
    runs-on: ubuntu-24.04
    container:
      image: docker.io/redhat/ubi8
      env:
        NODE_ENV: development
        GH_TOKEN: ${{ github.token }}
      # credentials:
      #   username: ${{ secrets.REGISTRY_USER }}
      #   password: ${{ secrets.REGISTRY_TOKEN }}

      # ports:
      #   - 80
      # volumes:
      #   - my_docker_volume:/volume_mount
    env:
      GH_TOKEN: ${{ github.token }}
    strategy:
        max-parallel: 1
        matrix:
            # set: [rhel-8-for-x86_64-baseos-rpms, rhel-8-for-x86_64-appstream-rpms, codeready-builder-for-rhel-8-x86_64-rpms, epel, docker-ce-stable]
            set: [docker-ce-stable]
    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Show Files
        run: |
          chmod a+x reposync.sh 
          ls -Alht

      - name: List disks
        run: df -h / /mnt

      - name: Register system and install packages
        run: |
          rm /etc/rhsm-host
          subscription-manager register --username '${{ secrets.RHDN_USER }}' --password '${{ secrets.RHDN_PASS }}'
          dnf install -y dnf-plugins-core yum-utils mkisofs isomd5sum tree procps-ng
          echo "Registering epel Repo"
          dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
          echo "Registering docker-ce-stable Repo"
          dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo

      - name: Run Collection for ${{ matrix.set }}
        run: |
          echo "Collecting ${{ matrix.set }} RPMs"
          ./reposync.sh ${{ matrix.set }}

      - name: Unregister system
        run: subscription-manager unregister

      - name: Show Consumption
        run: |
          echo -e "Disk Usage $(du -chs /mnt/${{ matrix.set }})\n"
          echo -e "Disk Space $(df -h /mnt)\n"

      # - name: Copy README to ${{ matrix.set }} ISO
      #   run: cp -v README.md /mnt/${{ matrix.set }}/

      - name: ISO Table of contents
        run: |
          tree /mnt/${{ matrix.set }} \
            | tee /mnt/${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt

      - name: Upload ISO ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          path: /mnt/${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Make ${{ matrix.set }} ISO
        run: |
          echo "Making ISO of ${{ matrix.set }}"
          mkisofs -J -R -v -T -l \
            -V '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -o /mnt/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso \
            /mnt/${{ matrix.set }}

      - name: Implant MD5 sum into ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
        run: implantisomd5 /mnt/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso Hash
        run: |
          sha256sum -b ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso | tee \
            /mnt/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alh /mnt/${{ matrix.set }}/*.iso*

      # - name: Upload ISO
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
      #     path: /mnt/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
      #     if-no-files-found: error

      - name: Upload ISO Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha
          path: /mnt/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha
