name: RHEL-RPM-Collection
run-name: ${{ github.actor }} is Collecting Images ðŸš€
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1" # Update weekly on Monday Midnight
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

      - name: Get disk space
        id: DISK  
        run: |
          df -h
          echo -e "\nDisk List"
          sudo fdisk -l | grep -i disk

  Collect-RPMs-RHEL8:
    needs: [Date]
    runs-on: ubuntu-24.04
    container:
      image: docker.io/redhat/ubi8
      env:
        NODE_ENV: development
        GH_TOKEN: ${{ github.token }}
      # credentials:
      #   username: ${{ secrets.REGISTRY_USER }}
      #   password: ${{ secrets.REGISTRY_TOKEN }}

      # ports:
      #   - 80
      # volumes:
      #   - my_docker_volume:/volume_mount
    env:
      GH_TOKEN: ${{ github.token }}
    strategy:
        matrix:
            set: [CoreOS, Appstream, CodeReady, EPEL, Docker]
    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Show Files
        run: ls -Alht

      - name: List disks
        run: df -h

      - name: Register system and install packages
        run: |
          rm /etc/rhsm-host
          subscription-manager register --username '${{ secrets.RHDN_USER }}' --password '${{ secrets.RHDN_PASS }}'
          dnf install -y dnf-plugins-core yum-utils mkisofs isomd5sum tree

      - name: Run Collection for ${{ matrix.set }}
        run: |
          case ${{ matrix.set }} in
            CoreOS)
              echo "Collecting CoreOS RPMs"
              reposync --download-metadata \
                --repo=rhel-8-for-x86_64-baseos-rpms \
                -p ${{ matrix.set }}
              ;;
            Appstream)
              echo "Collecting Appstream RPMs"
              reposync --download-metadata \
                --repo=rhel-8-for-x86_64-appstream-rpms \
                -p ${{ matrix.set }}
              ;;
            CodeReady)
              echo "Collecting CodeReady Builder RPMs"
              reposync --download-metadata \
                --repo=codeready-builder-for-rhel-8-x86_64-rpms \
                -p ${{ matrix.set }}
              ;;
            EPEL)
              echo "Registering EPEL Repo"
              dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
              echo "Collecting EPEL RPMs"
              # reposync --download-metadata \
              #   --repo=epel \
              #   -p ${{ matrix.set }} 
              ;;
            Docker)
              echo "Registering Docker CE Repo"
              dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
              echo "Collecting Docker RPMs"
              reposync --download-metadata \
                --repo=docker-ce-stable \
                -p ${{ matrix.set }}
              ;;
            *)
              echo "No valid set found"
              ;;
          esac

      - name: Unregister system
        run: subscription-manager unregister

      - name: Show Consumption
        run: |
          echo -e "Disk Usage $(du -chs ${{ matrix.set }})\n"
          echo -e "Disk Space $(df -h /)\n"

      # - name: Copy README to ${{ matrix.set }} ISO
      #   run: cp -v README.md ${{ matrix.set }}/

      # - name: Install mkisofs
      #   run: |
      #     sudo apt-get update -y
      #     sudo apt-get install -y mkisofs isomd5sum

      # - name: Make ${{ matrix.set }} ISO
      #   run: |
      #     echo "Making ISO of ${{ matrix.set }}"
      #     mkisofs -J -R -v -T -l \
      #       -V '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
      #       -A '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
      #       -o ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso \
      #       ${{ matrix.set }}

      # - name: Implant MD5 sum into ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
      #   run: implantisomd5 ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso

      # - name: Generate ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso Hash
      #   run: |
      #     sha256sum -b ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso | tee \
      #       ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha

      # - name: Show ISO & Hash
      #   run: ls -Alh *.iso*

      # - name: Send ${{ matrix.set }} ISO to Sharepoint
      #   uses: amentumservices/sharepoint-file-upload-action@pappasjfed-patch-1
      #   with:
      #     file_path: "*.iso*"
      #     host_name: "${{ secrets.SHAREPOINT_HOST }}"
      #     site_name: "${{ secrets.SHAREPOINT_SITE }}"
      #     upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
      #     tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
      #     client_id: ${{ secrets.SHAREPOINT_APP_ID }}
      #     client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
      #     login_endpoint: "login.microsoftonline.us"
      #     graph_endpoint: "graph.microsoft.us"
      

