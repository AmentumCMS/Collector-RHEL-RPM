name: RHEL-RPM-Collection
run-name: ${{ github.actor }} is Collecting Images ðŸš€
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1" # Update weekly on Monday Midnight
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

      - name: Get disk space
        id: DISK  
        run: |
          df -h
          echo -e "\nDisk List"
          sudo fdisk -l | grep -i disk

  Collect-RPMs-RHEL8:
    needs: [Date]
    runs-on: ubuntu-24.04
    container:
      image: docker.io/redhat/ubi8
      env:
        NODE_ENV: development
        GH_TOKEN: ${{ github.token }}
      # credentials:
      #   username: ${{ secrets.REGISTRY_USER }}
      #   password: ${{ secrets.REGISTRY_TOKEN }}

      # ports:
      #   - 80
      # volumes:
      #   - my_docker_volume:/volume_mount
    env:
      GH_TOKEN: ${{ github.token }}
    strategy:
        max-parallel: 1
        matrix:
            # set: [CoreOS, Appstream, CodeReady, EPEL, Docker]
            set: [Docker]
    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Show Files
        run: ls -Alht

      - name: List disks
        run: df -h / /mnt

      - name: Register system and install packages
        run: |
          rm /etc/rhsm-host
          subscription-manager register --username '${{ secrets.RHDN_USER }}' --password '${{ secrets.RHDN_PASS }}'
          dnf install -y dnf-plugins-core yum-utils mkisofs isomd5sum tree procps-ng

      - name: Run Collection for ${{ matrix.set }}
        run: |
          case ${{ matrix.set }} in
            CoreOS)
              echo "Collecting ${{ matrix.set }} RPMs"
              ./reposync.sh rhel-8-for-x86_64-baseos-rpms
              
            ;;
            Appstream)
              echo "Collecting ${{ matrix.set }} RPMs"
              ./reposync.sh rhel-8-for-x86_64-appstream-rpms
              ;;
            CodeReady)
              echo "Collecting ${{ matrix.set }} RPMs"
              ./reposync.sh codeready-builder-for-rhel-8-x86_64-rpms
              ;;
            EPEL)
              echo "Registering ${{ matrix.set }} Repo"
              dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
              echo "Collecting ${{ matrix.set }} RPMs"
              ./reposync.sh epel
              
              ;;
            Docker)
              echo "Registering Docker CE Repo"
              dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
              echo "Collecting ${{ matrix.set }} RPMs"
              ./reposync.sh docker-ce-stable
              ;;
            *)
              echo "No valid set found"
              ;;
          esac

      - name: Unregister system
        run: subscription-manager unregister

      - name: Show Consumption
        run: |
          echo -e "Disk Usage $(du -chs ${{ matrix.set }})\n"
          echo -e "Disk Space $(df -h /mnt)\n"

      # - name: Copy README to ${{ matrix.set }} ISO
      #   run: cp -v README.md ${{ matrix.set }}/

      - name: ISO Table of contents
        run: |
          tree ${{ matrix.set }} \
            | tee ${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt

      - name: Upload ISO ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          path: ${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Make ${{ matrix.set }} ISO
        run: |
          echo "Making ISO of ${{ matrix.set }}"
          mkisofs -J -R -v -T -l \
            -V '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso \
            ${{ matrix.set }}

      - name: Implant MD5 sum into ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
        run: implantisomd5 ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso Hash
        run: |
          sha256sum -b ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso | tee \
            ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alh *.iso*

      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
          path: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
          if-no-files-found: error

      - name: Upload ISO Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha
          path: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Send ${{ matrix.set }} ISO to Sharepoint
        uses: amentumvms/sharepoint-file-upload-action
        with:
          file_path: "*.iso*"
          host_name: "${{ secrets.SHAREPOINT_HOST }}"
          site_name: "${{ secrets.SHAREPOINT_SITE }}"
          upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"
